/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react"
import { useGLTF } from "@react-three/drei"
import { useFrame } from "@react-three/fiber"

import {
  MaterialBlue,
  MaterialGlassBlueLight,
  MaterialGlassBlue,
  MaterialGlassBlueDark,
  MaterialGlassWhite,
  MaterialGreenLight,
  MaterialPink,
  MaterialWater,
  MaterialWhite,
} from "../materials"

const Paris = () => {
  const { nodes } = useGLTF("/planets/paris.gltf")

  const ref: null | { current: THREE.Mesh } = useRef()

  useFrame(() => {
    if (ref) {
      const x = ref.current.rotation.x + 0.001
      const y = ref.current.rotation.y + 0.002
      const z = ref.current.rotation.z + 0.003
      ref.current.rotation.set(x, y, z)
    }
  })

  return (
    <group
      dispose={null}
      ref={ref}
      rotation={[Math.PI, 0, Math.PI / 2]}
      scale={2}
    >
      <mesh geometry={nodes.Sphere006.geometry}>
        <MaterialWhite />
      </mesh>
      <mesh geometry={nodes.Sphere006_1.geometry}>
        <MaterialWater />
      </mesh>
      <mesh geometry={nodes.Sphere006_2.geometry}>
        <MaterialBlue />
      </mesh>
      <mesh geometry={nodes.Sphere006_3.geometry}>
        <MaterialGreenLight />
      </mesh>
      <mesh geometry={nodes.Sphere006_4.geometry}>
        <MaterialPink />
      </mesh>
      <mesh geometry={nodes.Sphere006_5.geometry}>
        <MaterialGlassBlueLight />
      </mesh>
      <mesh geometry={nodes.Sphere006_6.geometry}>
        <MaterialGlassWhite />
      </mesh>
      <mesh geometry={nodes.Sphere006_7.geometry}>
        <MaterialGlassBlueDark />
      </mesh>
      <mesh geometry={nodes.Sphere006_8.geometry}>
        <MaterialGlassBlue />
      </mesh>
    </group>
  )
}

// useGLTF.preload("/planet.gltf")

export default Paris
